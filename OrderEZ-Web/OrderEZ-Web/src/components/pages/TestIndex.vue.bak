<template>
    <el-container class="container">
        <!-- 头部区域 -->
        <el-header class="header">欢迎使用本系统</el-header>

        <el-container class="body-container">
            <!-- 侧边栏 -->
            <el-aside class="aside">
                <el-menu :default-active="currentPage"
                         class="el-menu-vertical-demo"
                         @select="handleMenuItemClick">
                    <el-menu-item index="UserManagement">
                        <el-icon>
                            <icon-menu></icon-menu>
                        </el-icon>
                        <span>用户管理</span>
                    </el-menu-item>


                    <el-menu-item index="GoodManagement">
                        <el-icon>
                            <icon-menu/>
                        </el-icon>
                        <span>商品管理</span>
                    </el-menu-item>
                </el-menu>
                <div class="spacer" style="height: 50vh"></div>
                <el-button type="danger" @click="logout">退出登录</el-button>
            </el-aside>

            <el-container class="content">
                <!-- 主内容区 -->
                <el-main class="main">
                    <router-view></router-view>
                </el-main>

                <!-- 底部 -->
                <el-footer class="footer">欢迎使用本系统</el-footer>
            </el-container>

        </el-container>
    </el-container>
</template>

<script setup>
import {ref} from "vue";
import {useRouter} from "vue-router";
import {logout} from "@/utils/request.js.bak";

const router = useRouter();
const currentPage = ref(localStorage.getItem('currentPage') || 'UserManagement');

const handleMenuItemClick = (index) => {
    currentPage.value = index;
    localStorage.setItem('currentPage', index);

    // 根据不同的菜单项进行路由导航
    switch (index) {
        case 'UserManagement':
            router.push({name: 'UserManagement'});
            break;
        case 'GoodManagement':
            router.push({name: 'GoodManagement'});
            break;
        default:
            break;
    }
};
</script>


<style scoped>
/* 🔹 让 el-container 充满整个视口 */
.container {
    height: 97vh;
    display: flex;
    flex-direction: column;
}

/* 头部 - 红色 */
.header {
    background-color: #00ff00;
    color: white;
    text-align: center;
    line-height: 60px;
    font-size: 18px;
    flex-shrink: 0; /* 不要让 header 被挤压 */
}

/* 底部 - 蓝色 */
.footer {
    background-color: #00ff00;
    color: white;
    text-align: center;
    line-height: 50px;
    font-size: 18px;
    flex-shrink: 0; /* 不要让 footer 被挤压 */
}

/* 侧边栏 - 黄色 */
.aside {
    background-color: #ff0000;
    width: 200px; /* 固定侧边栏宽度 */
    color: black;
    text-align: center;
    flex-shrink: 0;
}

/* 🔹 让主内容区填充所有剩余空间 */
.content {
    display: flex;
    flex-direction: column;
    flex: 1;
    min-height: 0; /* 避免 flexbox 计算错误 */
}

/* 主内容 - 绿色 */
.main {
    background-color: #1890FF;
    flex: 1;
    color: white;
    text-align: center;
    line-height: 200px;
    font-size: 18px;
    overflow: auto; /* 允许内容滚动 */
}




</style>



